1.创建版本库
$ cd e:
$ cd GIT
$ cd m
$ pwd (显示当前目录)
$ git init

2.添加文件上传
$ git add readme.txt   分别添加文件至暂存区
$ git commit -m"wrote a readme txt"   一次性提交暂存区所有文件至master分支

3.git status命令可以查看仓库当前的状态

4.查看区别
git diff readme.txt = git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别
git diff HEAD^ -- readme.txt命令可以查看工作区和版本库里面上一版本的区别

5.查看历史
git log 命令显示从最近到最远的提交日志
git log --pretty=oneline 显示简化日志
git reflog 查看命令历史

6.版本回退
git reset --hard commit_id 版本回退命令,其中commit_id指版本号
HEAD指向的版本就是当前版本
上一个版本就是HEAD^,上上一个版本就是HEAD^^,往上100个版本写成HEAD~100
例如回退到上一版本：git reset --hard HEAD^

7.撤销修改
场景1：想丢弃工作区的修改/删除，用命令git checkout -- file （用版本库里的版本替换工作区的版本，无论修改/删除）

场景2：改乱了工作区某个文件，还添加到了暂存区，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退，不过前提是没有推送到远程库。

8.删除文件
第一步：手动删除文件/使用 rm test.txt命令
第二步：提交删除：git rm test.txt/git add test.txt
第三步：上传git commit -m "remove test.txt"

9.远程库
(1)要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改

(2)要克隆一个仓库，首先必须知道仓库的地址，然后使用$ git clone git@github.com:Cloudy55/gitskills.git

10.分支
查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

当Git无法自动合并分支时，就必须首先解决冲突：把Git合并失败的文件手动编辑为我们希望的内容，再提交，合并完成。

11.标签

命令git tag <tagname>用于新建一个标签，默认为HEAD，也可以指定一个commit id，如git tag <tagname> e223；

命令git tag -a <tagname> -m "blablabla..."可以用-a指定标签名，-m指定说明文字；

命令git tag可以查看所有标签。

命令git show <tagname>可以看到说明文字

命令git push origin <tagname>可以推送一个本地标签；

命令git push origin --tags可以推送全部未推送过的本地标签；

命令git tag -d <tagname>可以删除一个本地标签；

命令git push origin :refs/tags/<tagname>可以删除一个远程标签